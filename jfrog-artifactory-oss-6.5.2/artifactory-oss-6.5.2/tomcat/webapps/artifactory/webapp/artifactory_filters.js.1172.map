{"version":3,"sources":["webpack:///./filters/artifactory.filters.module.js","webpack:///./filters/format_long_int_by_scale.js","webpack:///./filters/replace_character.js","webpack:///./filters/parse_links.js","webpack:///./filters/replace_string_for_aol.js"],"names":[],"mappings":"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","file":"artifactory_filters.1172.js","sourcesContent":["import {FormatLongIntByScale} from './format_long_int_by_scale';\nimport {ReplaceCharacter} from './replace_character';\nimport {ParseLinks} from './parse_links';\nimport {ReplaceStringForAol} from './replace_string_for_aol';\n\nexport default angular.module('artifactory.filters', [])\n        .filter('replaceCharacter', ReplaceCharacter)\n        .filter('parseLinks', ParseLinks)\n        .filter('replaceStringForAol', ReplaceStringForAol)\n        .filter('formatLongIntByScale', FormatLongIntByScale);\n\n\n// WEBPACK FOOTER //\n// ./filters/artifactory.filters.module.js","export function FormatLongIntByScale() {\n\treturn function(num) {\n\t\tlet ONE_K = 1000, ONE_MILLION = 1000000, ONE_BILLION = 1000000000;\n\t\tif(Math.round(num / ONE_K) > 0 && Math.round(num / ONE_MILLION) <= 0) {\n            return (num / ONE_K).toFixed(1) +  ' K';\n\t\t}\n\t\tif(Math.round(num / ONE_MILLION) > 0 && Math.round(num / ONE_BILLION) <= 0) {\n\t\t\treturn (num / ONE_MILLION).toFixed(2) +  ' M';\n\t\t}\n\t\tif(Math.round(num / ONE_BILLION) > 0) {\n\t\t\treturn (num / ONE_BILLION).toFixed(2) +  ' B';\n\t\t}\n\t\treturn num;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./filters/format_long_int_by_scale.js","export function ReplaceCharacter() {\n\n    return function(input, search, replace) {\n        if (input) {\n            let regex = new RegExp(search, 'g');\n            return input.replace(regex, replace);\n        }\n\n        return input;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./filters/replace_character.js","export function ParseLinks() {\n\n    return function(str) {\n        return str.replace(/\\[(.*?)\\]/g, function (match) {\n            let linkData = match.substring(1, match.length - 1).split(',');\n            if (linkData.length == 2)\n                return '<a href=\"' + linkData[0].trim() + '\" target=\"_blank\">' + linkData[1].trim() + '</a>';\n            else\n                return match;\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./filters/parse_links.js","// TODO: pass in key to filter instead of the text\nconst dictionary = {\n\t'Import & Export': 'Import',\n\t'Repositories Import & Export': 'Import Repositories'\n};\n\nexport function ReplaceStringForAol(ArtifactoryFeatures) {\n\n    return function(str) {\n    \tif (ArtifactoryFeatures.isAol()) {\n    \t\treturn dictionary[str] || str;\n    \t}\n    \telse {\n    \t\treturn str;\n    \t}\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./filters/replace_string_for_aol.js"],"sourceRoot":""}